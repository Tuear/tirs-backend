import requests
import random
import time
from faker import Faker

# 初始化 Faker 生成中文虚拟数据
fake = Faker('zh_CN')

# 定义 API 端点
API_URL = "http://127.0.0.1:5000/recommend/submit_review"  # 请根据实际API地址修改

# 定义大学列表
universities = [
    "北京大学", "清华大学", "复旦大学", "上海交通大学", "浙江大学",
    "南京大学", "中国科学技术大学", "华中科技大学", "武汉大学", "中山大学",
    "西安交通大学", "哈尔滨工业大学", "同济大学", "东南大学", "厦门大学"
]

# 定义学院列表
departments = [
    "计算机科学与技术学院", "电子工程学院", "机械工程学院", "材料科学与工程学院",
    "生命科学学院", "数学学院", "物理学院", "化学化工学院", "经济管理学院",
    "法学院", "医学院", "建筑学院", "外国语学院", "艺术学院"
]

# 学术特征描述
academic_traits = [
    # 基础学术词汇
        "学术", "研究", "论文", "项目", "课题", "实验", "发表", "期刊", "会议", "专利",
        "算法", "模型", "数据", "分析", "理论", "方法", "创新", "成果", "领域", "方向",
        # 研究类型
        "基础研究", "应用研究", "理论研究", "实证研究", "定量研究", "定性研究", "交叉研究",
        # 研究资源
        "经费", "资源", "资金", "实验室", "设备", "数据库", "资料", "文献", "数据集", "计算资源",
        "财力", "资源支持", "经费支持", "经费充足", "经费保障", "资金支持", "资源提供", "资源利用", "资源利用效率",
        "财力雄厚", "资金支持", "资金保障", "资金支持力度", "资金支持力度高", "资金支持力度低",
        # 研究产出
        "发表物", "出版物", "专著", "著作", "报告", "软著", "软件著作权", "技术方案", "解决方案",
        # 学术评价
        "影响因子", "引用", "索引", "顶刊", "顶会", "核心期刊", "SCI", "EI", "SSCI", "CSSCI",
        "高被引", "高影响力", "高水平", "优秀论文",
        # 学术活动
        "学术会议", "研讨会", "工作坊", "讲座", "报告会", "学术交流", "合作研究", "产学研", "校企合作",
        # 学科方向
        "人工智能", "机器学习", "深度学习", "自然语言处理", "计算机视觉", "大数据", "物联网", "区块链",
        "神经网络", "图像处理", "语音识别", "推荐系统", "数据挖掘", "知识图谱", "强化学习", "计算机图形学",
        "网络安全", "云计算", "边缘计算", "生物信息学", "计算生物学", "金融科技", "智慧医疗", "智能交通",
        "机器人", "自动化", "智能制造", "量子计算", "集成电路", "芯片设计",
        # 学术级别
        "国家级", "省级", "市级", "校级", "重点", "重大项目", "面上项目", "青年项目", "创新项目",
        # 学生相关
        "科研训练", "毕设", "毕业论文", "毕业设计", "大创", "创新创业", "科研竞赛", "科研项目", "科研经历",
        # 新增学术能力描述
        "科研能力突出", "学术视野开阔", "理论功底扎实", "实验设计精巧", "数据分析精准", "模型构建能力强",
        "创新思维活跃", "研究视角独特", "学术洞察敏锐", "跨学科融合能力强", "前沿领域深耕",
        "技术转化高效", "科研规划清晰", "研究进度把控好", "学术资源丰富", "国际合作广泛",
        # 新增学术指导描述
        "论文指导细致", "实验指导耐心", "研究方法传授好", "学术写作指导强", "课题选择建议精准",
        "研究思路启发佳", "学术问题解答透彻", "科研素养培养好", "学术规范要求严格", "文献阅读指导有效",
        # 新增学术资源描述
        "计算资源充足", "实验设备先进", "数据资源丰富", "学术交流机会多", "国际会议支持足",
        "科研经费充足", "研究团队强大", "学术网络广泛", "数据库访问权限全", "实验材料供应及时",
        # 新增学术态度描述
        "治学严谨", "科研态度端正", "学术诚信高", "追求卓越", "精益求精",
        "开放包容", "鼓励创新", "尊重多元观点", "批判思维培养", "学术热情高",
        # 新增短小口语化表达
        "点子多", "实验溜", "分析准", "模型强",
        "路子野", "眼光毒", "经费足", "装备顶", "数据库全",
        "报销快", "机会多", "资源多", "挂名爽", "大佬带",
        "改文细", "无私教", "文献透", "理论清", "课题多",
        "不差钱", "项目多", "顶会常", "高产王", "卷科研",
        "实验牛", "挖数据", "老司机", "经费足", "硬件好",
        "软件新", "数据足", "眼光准", "设备新", "批钱快",
        "材料足", "算力强", "指导细", "思路清", "一点通",
        "压力小", "节奏稳", "氛围好", "不骂人", "教得细",
        "入门易", "耐心足", "小白友", "零基础", "训练好",
        "毕设强", "大创多", "竞赛牛", "资源广", "合作多",
        "结合好", "自由高", "方向活", "选题自由", "兴趣尊",
        # 更短的两字表达
        "高产", "点子王", "实验狂", "分析神", "模型神",
        "经费多", "设备好", "报销爽", "挂名多", "带飞",
        "改文细", "教得好", "文献强", "理论神", "项目王",
        "顶会王", "卷王", "数据神", "司机稳", "硬件顶",
        "软件强", "数据多", "眼光毒", "批钱爽", "材料够",
        "算力足", "指导好", "思路好", "反应快", "压力小",
        "节奏好", "氛围棒", "不骂人", "教得透", "入门快",
        "耐心好", "小白好", "零门槛", "训练强", "毕设好",
        "大创全", "竞赛强", "资源多", "合作广", "结合紧",
        "自由高", "方向多", "选题活", "兴趣重", "点通"
]

# 责任心特征描述
responsibility_traits = [
    # 基本性格特征
        "耐心", "严格", "轻松", "负责任", "友好", "压力大", "氛围", "团队", "指导", "沟通",
        "时间", "自由", "支持", "帮助", "经验", "开放", "鼓励", "要求", "关心", "交流", "佛系",
        # 指导风格
        "散养", "放养", "细致", "系统", "深入", "投入", "时间多", "时间少", "定期会议", "随时沟通",
        "线上交流", "面对面", "活跃", "严肃", "和谐", "竞争", "合作", "宽松", "严谨", "灵活",
        "个性化", "定制化", "因材施教", "引导式", "启发式", "手把手", "细致入微",
        # 个人特质
        "年轻", "资深", "经验丰富", "有活力", "有耐心", "有责任心", "有热情", "有亲和力", "有领导力",
        "有创造力", "和蔼", "亲切", "严厉", "温和", "理性", "感性", "务实", "理想主义",
        "创新思维", "批判思维", "严谨思维", "逻辑性强", "幽默", "风趣", "平易近人", "高要求", "低要求",
        "不负责",
        # 学生支持
        "经费支持", "实习推荐", "就业帮助", "学术指导", "论文指导", "职业规划", "深造推荐", "出国推荐",
        "资源提供", "机会提供", "项目参与", "论文合作", "署名机会", "奖学金", "补助", "津贴",
        "心理支持", "情感支持", "生活关心", "职业发展", "人脉资源", "行业资源","对学生好","对学生要求高",
        # 团队文化
        "平等", "包容", "多元", "创新", "协作", "互助", "积极", "向上", "学习型", "研究型",
        "高效率", "快节奏", "慢节奏", "成果导向", "过程导向",
        # 新增责任心描述
        "主动关心学生", "及时解决问题", "承诺必兑现", "工作一丝不苟", "跟进学生进展",
        "保护学生权益", "维护学术诚信", "尊重学生时间", "危机处理能力强", "支持学生决定",
        # 新增人品特征描述
        "待人真诚", "处事公正", "尊重差异", "富有同理心", "谦虚低调",
        "乐于分享", "信守承诺", "保护隐私", "尊重学生选择", "学术道德高尚",
        # 新增指导风格描述
        "个性化指导", "启发式教学", "鼓励独立思考", "培养自主能力", "提供发展空间",
        "目标导向明确", "反馈具体实用", "鼓励团队协作", "培养领导能力", "注重实践应用"
]

# 人品特征描述
character_traits = [
        # 新增学生支持描述
        "职业发展指导", "实习推荐积极", "就业资源丰富", "深造支持有力", "心理支持到位",
        "生活关怀细致", "困难时期陪伴", "资源分配合理", "机会提供公平", "人脉资源分享",
        # 新增沟通风格描述
        "沟通高效直接", "倾听耐心细致", "表达清晰明确", "反馈建设性强", "讨论氛围开放",
        "尊重不同意见", "批评方式得当", "鼓励自由表达", "定期一对一交流", "线上线下结合",
        # 新增团队氛围描述
        "团队凝聚力强", "互助氛围浓厚", "学术氛围自由", "创新氛围浓厚", "竞争氛围健康",
        "跨学科交流多", "师生关系平等", "经验传承良好", "新成员融入快", "成果共享公平",
        "人超好", "脾气好", "没架子", "像朋友", "能扛事",
        "护学生", "不压榨", "不抢功", "不画饼", "说到做",
        "好商量", "接地气", "回复快", "不拖堂", "反馈快",
        "不消失", "放养型", "管得松", "不压力", "心态好",
        "开玩笑", "请客多", "福利多", "关心人", "帮解决",
        "帮找对象", "氛围好", "师兄好", "师弟好", "像家庭",
        "不抢一作", "署名公", "推荐强", "帮工作", "实习强",
        "熬夜陪", "不骂人", "不甩锅", "不施压", "真帮忙"
]


def generate_review_data():
    """生成单条导师评价数据"""
    return {
        "name": fake.name(),  # 生成中文姓名
        "university": random.choice(universities),
        "department": random.choice(departments),
        "academic": random.choice(academic_traits),
        "responsibility": random.choice(responsibility_traits),
        "character": random.choice(character_traits)
    }


def submit_review(data):
    """提交评价数据到API"""
    try:
        response = requests.post(API_URL, json=data)
        if response.status_code == 200:
            print(f"✅ 提交成功: {data['name']} - {response.json()['message']}")
        else:
            print(f"❌ 提交失败: {data['name']} - 状态码: {response.status_code}, 错误: {response.text}")
        return response
    except requests.exceptions.RequestException as e:
        print(f"🚨 请求异常: {data['name']} - {str(e)}")
        return None


def main():
    print("开始生成并提交导师评价数据...")
    successful_count = 0

    for i in range(1, 501):
        print(f"\n生成第 {i}/500 条数据...")
        review_data = generate_review_data()
        print(f"导师: {review_data['name']}")
        print(f"学校: {review_data['university']} - 学院: {review_data['department']}")
        print(f"学术: {review_data['academic']}")
        print(f"责任: {review_data['responsibility']}")
        print(f"人品: {review_data['character']}")

        response = submit_review(review_data)
        if response and response.status_code == 200:
            successful_count += 1

        # 添加短暂延迟防止请求过快
        time.sleep(0.5)

    print("\n" + "=" * 500)
    print(f"数据提交完成! 成功: {successful_count}/500")
    print("=" * 500)


if __name__ == "__main__":
    # 安装必要的依赖: pip install Faker requests
    main()